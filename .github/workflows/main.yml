name: Build and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    type: [opened, labeled, unlabeled, synchronize]
    branches: [ master ]
  release:
    types:
      - released

jobs:
  build:

    name: Build & run Tests

    runs-on: ubuntu-latest

    steps:
    - run: mkdir build
    - run: echo "cdf" > build/test.txt

    - run: |
        echo "$ABC"
        echo "CDF"
      shell: bash
      env:
        ABC: ${{ secrets.ABC }}
        CDF: ${{ secrets.CDF }}

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
          name: ${{ github.sha }}
          path: build/

  # pre-release:
  #   name: "Pre Release"
  #   runs-on: "ubuntu-latest"
  #   if: github.ref == 'refs/heads/master'

  #   steps:

  #     - uses: "marvinpinto/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         automatic_release_tag: "latest"
  #         prerelease: true
  #         title: "Development Build"
  #         files: |
  #           LICENSE.txt
  #           *.jar
  pre-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          fetch_all_tags: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: main,master
          release_branches: ""

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}



  deploy-qa:
    name: Deploy QA

    runs-on: ubuntu-latest

    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
          path: build

      - run: |
          echo "$ABC"
          echo "$CDF"
        shell: bash
        env:
          ABC: ${{ secrets.QA_ABC }}
          CDF: ${{ secrets.QA_CDF }}

      - name: List
        run: |
          ls -la
          ls -la build/

      - name: Deploy static site to S3 bucket
        run: aws s3 sync --delete --cache-control max-age=604800 ./build/ s3://${{ secrets.QA_BUCKET }}

  deploy-prod:
    name: Deploy PROD

    runs-on: ubuntu-latest

    needs: build
    if: github.event_name == 'release' && github.event.action == 'released'

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
          path: build

      - run: |
          echo "$ABC"
          echo "$CDF"
        shell: bash
        env:
          ABC: ${{ secrets.PROD_ABC }}
          CDF: ${{ secrets.PROD_CDF }}

      - name: List
        run: |
          ls -la
          ls -la build/

      - name: Deploy static site to S3 bucket
        run: aws s3 sync --delete --cache-control max-age=604800 ./build/ s3://${{ secrets.PROD_BUCKET }}


